/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #0b4a8b */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[-52.97652011921105, -28.189848961985046],
                  [-52.97652011921105, -28.1966572511637],
                  [-52.96913868000207, -28.1966572511637],
                  [-52.96913868000207, -28.189848961985046]]], null, false),
            {
              "system:index": "0"
            })]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var collection = ee.ImageCollection("UCSB-CHG/CHIRPS/DAILY")
                    .select(['precipitation'])
                    .filterBounds(geometry.geometry())
                    .filter(ee.Filter.calendarRange(1990,2020,'year'))
                    .filter(ee.Filter.calendarRange(360,10,'day_of_year'));
                    
print(collection)

var doy = ee.Date('2020-12-01').getRelative('day', 'year');
print(doy)

function extract_precipitation(feature, day_start, month_start, year_start, day_finish, month_finish, year_finish){
  var doy_start = ee.Number(ee.Date.fromYMD(2020, month_start, day_start).getRelative('day', 'year'))
  var doy_finish = ee.Number(ee.Date.fromYMD(2020, month_finish, day_finish).getRelative('day', 'year'))
  var collection = ee.ImageCollection("UCSB-CHG/CHIRPS/DAILY")
                    .select(['precipitation'])
                    .filterBounds(feature.geometry())
                    .filter(ee.Filter.calendarRange(year_start,year_finish,'year'))
                    .filter(ee.Filter.calendarRange(doy_start,doy_finish,'day_of_year'));
  return collection;
}

var col = extract_precipitation(geometry, 15, 1, 1990, 15, 2, 2020);
print(col)


function ymdList(imgcol){
    var iter_func = function(image, newlist){
        var date = (image.date().format("YYYY-MM-dd"));
        newlist = ee.List(newlist);
        return ee.List(newlist.add(date).sort())
    };
    return imgcol.iterate(iter_func, ee.List([]));
}
print(ymdList(col))

var mapfunc = function(feat) {
  var geom = feat.geometry();
  var addProp = function(img, f) {
    var newf = ee.Feature(f);
    var date = img.date().format('yyyy-MM-dd');
    
    var value = ee.Number(img.reduceRegion(ee.Reducer.mean(), geom, 5000).get('precipitation'));
    
    var precipitation = ee.Number(ee.Algorithms.If(value.gt(25),ee.Number(25),ee.Number(value)));
    precipitation = ee.Number(ee.Algorithms.If(precipitation.lt(0),ee.Number(0),ee.Number(precipitation)));
    
    return ee.Feature(ee.Algorithms.If(precipitation,
                                       newf.set(date, ee.Number(precipitation)),
                                       newf.set(date, ee.Number(0))));
  };
  var newfeat = ee.Feature(col.iterate(addProp, feat));
  //print(newfeat)
  return newfeat;
};

var newft = geometry.map(mapfunc);
print(newft);

Export.table.toAsset(newft, 'chirps_teste', 'users/deniscortevieira/chirps_teste_fc')