/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var chirps = ee.ImageCollection("UCSB-CHG/CHIRPS/PENTAD"),
    geometry = /* color: #d63000 */ee.Geometry.Polygon(
        [[[-53.87666864720098, -27.065185606350603],
          [-56.11787958470098, -28.542252516148917],
          [-57.52412958470098, -30.530274888990984],
          [-53.21748895970098, -32.66360461983947],
          [-53.70088739720098, -33.620286059555966],
          [-53.17354364720098, -33.87606544244049],
          [-51.37178583470098, -31.58433246629634],
          [-49.57002802220098, -29.579375249525583],
          [-49.78975458470098, -28.42637565191414],
          [-52.20674677220098, -27.104311612510894]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

// set start and end year
var startyear = 2000; 
var endyear = 2014; 

// make a date object
var startdate = ee.Date.fromYMD(startyear, 1, 1);
var enddate = ee.Date.fromYMD(endyear + 1, 1, 1);

// make a list with years
var years = ee.List.sequence(startyear, endyear);
// make a list with months
var months = ee.List.sequence(1, 12);

// Specify Country names
var country_names = ['Indonesia'];
 
// Get the country boundaries
var countries = ee.FeatureCollection('ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw');
 
// Filter for country
var Indonesia = countries.filter(ee.Filter.inList('Country', country_names));
 
// Get the geometry
var Indonesia = geometry


var monthlyPrecip =  ee.ImageCollection.fromImages(
  years.map(function (y) {
    return months.map(function(m) {
      var w = chirps.filter(ee.Filter.calendarRange(y, y, 'year'))
                    .filter(ee.Filter.calendarRange(m, m, 'month'))
                    .sum();
      return w.set('year', y)
              .set('month', m)
              .set('system:time_start', ee.Date.fromYMD(y, m, 1));
                        
    });
  }).flatten()
);


var meanMonthlyP =  ee.ImageCollection.fromImages(
  months.map(function (m) {
    var w = monthlyPrecip.filter(ee.Filter.eq('month', m)).mean();
    return w.set('month', m)
            .set('system:time_start',ee.Date.fromYMD(1, m, 1)); 
  }).flatten()
);


var title = {
  title: 'Monthly precipitation',
  hAxis: {title: 'Time'},
  vAxis: {title: 'Precipitation (mm)'},
};


var chartMonthly = ui.Chart.image.seriesByRegion({
  imageCollection: meanMonthlyP, 
  regions: Indonesia,
  reducer: ee.Reducer.mean(),
  band: 'precipitation',
  scale: 2500,
  xProperty: 'system:time_start',
  seriesProperty: 'SITE'
}).setOptions(title)
  .setChartType('ColumnChart');

print(chartMonthly);